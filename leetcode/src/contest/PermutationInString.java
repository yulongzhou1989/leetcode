package contest;

public class PermutationInString {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(checkInclusion("hello", "ooolleooleh"));
		// System.out.println(checkInclusion("hello","oolleh"));
		// System.out.println(checkInclusion("vxqakfyaqahufxfizupjrkkifjlbfqfeprqrfjvxnubntdtlvz",""));
	}

	public static boolean checkInclusion(String s1, String s2) {

		int len1 = s1.length();
		int len2 = s2.length();
		if (len1 == 0)
			return true;
		if (len1 > len2)
			return false;

		int[] arr = new int[26];

		for (int i = 0; i < len1; i++) {
			arr[s1.charAt(i) - 'a']++;
		}

		int[] arr1 = arr.clone();
		int len = 0;
		for (int i = 0; i < len2; i++) {
			Character c = s2.charAt(i);
			if (--arr1[c - 'a'] < 0) {
				len = 0;
				// reset arr1
				arr1 = arr.clone();
				break;
			} else {
				len++;
			}
			if (len == len1)
				return true;
		}

		return false;
	}

}
